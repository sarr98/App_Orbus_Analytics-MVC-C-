using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace AppOrbusAnalytics.Models
{
    public class Dal
    {
        APPLICATIONSEntities db = new APPLICATIONSEntities();


        public List<ANA_ENTREPRISES> GetListeEntreprises()
        {
            try
            {
                List<ANA_ENTREPRISES> listeEntreprises = db.ANA_ENTREPRISES.ToList();

                return listeEntreprises;
            }
            catch(Exception ex)
            {
                return null;
            }

        }

        public ANA_ENTREPRISES GetEntrepriseById(int id)
        {
            try
            {
                ANA_ENTREPRISES entreprise = db.ANA_ENTREPRISES.Where(u => u.id == id).FirstOrDefault();

                return entreprise;
            }
            catch (Exception ex)
            {
                return null;
            }

        }

        public bool UpdateUtilisateur(ANA_UTILISATEURS utilisateur) {
            try
            {
                ANA_UTILISATEURS utilisateurUpd = db.ANA_UTILISATEURS.Where(u => u.id == utilisateur.id).FirstOrDefault();
                if (utilisateurUpd == null)
                    throw new Exception();

                utilisateurUpd.userLogin = utilisateur.userLogin;
                utilisateurUpd.Nom = utilisateur.Nom;
                utilisateurUpd.Prenom = utilisateur.Prenom;
                utilisateurUpd.Email = utilisateur.Email;
                utilisateurUpd.Telephone = utilisateur.Telephone;
                db.Entry(utilisateurUpd).State = System.Data.Entity.EntityState.Modified;
                db.SaveChanges();

                return true;
            }
            catch (Exception ex)
            {
                return false;
            }

        }
    
        public bool UpdateEntreprise(ANA_ENTREPRISES entreprise)
        {
            try
            {
                ANA_ENTREPRISES entrepriseUpd = db.ANA_ENTREPRISES.Where(u => u.id == entreprise.id).FirstOrDefault();
                if (entrepriseUpd == null)
                    throw new Exception();

                entrepriseUpd.Adresse = entreprise.Adresse;
                entrepriseUpd.Telephone = entreprise.Telephone;

                db.Entry(entrepriseUpd).State = System.Data.Entity.EntityState.Modified;
                db.SaveChanges();

                return true;
            }
            catch (Exception ex)
            {
                return false;
            }

        }

        public List<ANA_UTILISATEURS> GetListeUtlisateurs()
        {
            try
            {
                List<ANA_UTILISATEURS> listeUtlisateurs = db.ANA_UTILISATEURS.ToList();

                return listeUtlisateurs;
            }
            catch (Exception ex)
            {
                return null;
            }

        }

        public ANA_UTILISATEURS GetUtlisateurById(int id)
        {
            try
            {
                ANA_UTILISATEURS Utlisateur = db.ANA_UTILISATEURS.Where(u => u.id == id).FirstOrDefault();

                return Utlisateur;
            }
            catch (Exception ex)
            {
                return null;
            }

        }
        public ANA_UTILISATEURS AddUser(ANA_UTILISATEURS user)
        {
            try
            {
                ANA_UTILISATEURS useradd = db.ANA_UTILISATEURS.Add(user);
                db.SaveChanges();
                return useradd;
            }
            catch (Exception ex)
            {
                return null;
            }

        }

        public ANA_ENTREPRISES AddEntreprise(ANA_ENTREPRISES entreprise)
        {
            try
            {
                ANA_ENTREPRISES entrepriseadd = db.ANA_ENTREPRISES.Add(entreprise);
                db.SaveChanges();
                return entrepriseadd;
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message); 
                return null;
            }

        }



    }
}